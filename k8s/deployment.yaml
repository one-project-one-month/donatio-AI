apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-donatio
  labels:
    app: ai-donatio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-donatio
  template:
    metadata:
      labels:
        app: ai-donatio
    spec:
      imagePullSecrets:
        - name: ecr_secret
      containers:
        - name: ai-donatio
          image: 592867232570.dkr.ecr.ap-southeast-1.amazonaws.com/eks-cluster/donatio:ai_latest
          ports:
            - containerPort: 8000
          env:
            - name: GROQ_API_KEY
              valueFrom:
                secretKeyRef:
                  name: donatio-ai-secret
                  key: GROQ_API_KEY
            - name: DATABASE_URL
              value: "postgresql://postgres:postgres@postgres-donatio-service:5432/donatio"
          volumeMounts:
            - name: ai-persistent-storage
              mountPath: /app/media
      volumes:
        - name: ai-persistent-storage
          persistentVolumeClaim:
            claimName: ai-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: ai-donatio-service
spec:
  selector:
    app: ai-donatio
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: gp2

---
apiVersion: v1
kind: Secret
metadata:
  name: donatio-ai-secret
type: Opaque
data:
  GROQ_API_KEY: Z3NrX3VwUG5DRUVVOEhvNDJtTUFOY05zV0dkeWIzRlkzaXEwMnJ5bmpaWnkuQk9XRGl6Mjk3aW0=
# image pull secret
# aws ecr get-login-password --region ap-southeast-1 | `
#   kubectl create secret docker-registry images `
#   --docker-server=592867232570.dkr.ecr.ap-southeast-1.amazonaws.com `
#   --docker-username=AWS `
#   --docker-password-stdin `
#   --namespace=your-namespace
# start
